/* Flexbox is used to create responsive layouts */
.container {
    display: flex;
    /* Enables flexbox layout */

    /* Flex Direction - Defines the main axis (row or column) */
    flex-direction: row;
    /* Default: Items placed in a row (left to right) */
    flex-direction: column;
    /* Items placed in a column (top to bottom) */
    flex-direction: row-reverse;
    /* Items placed in a row but in reverse order */
    flex-direction: column-reverse;
    /* Items placed in a column but in reverse order */

    /* Flex Wrap - Controls whether flex items should wrap */
    flex-wrap: nowrap;
    /* Default: Items stay in a single line (no wrapping) */
    flex-wrap: wrap;
    /* Items wrap onto multiple lines if needed */
    flex-wrap: wrap-reverse;
    /* Items wrap but in reverse order */

    /* Align Content - Controls spacing between rows when flex-wrap is enabled */
    align-content: flex-start;
    /* Rows align at the top */
    align-content: flex-end;
    /* Rows align at the bottom */
    align-content: center;
    /* Rows align at the center */
    align-content: space-between;
    /* Rows are evenly spaced with no extra space at edges */
    align-content: space-around;
    /* Rows have equal space around them */
    align-content: space-evenly;
    /* Rows have equal spacing, including edges */

    /* Justify Content - Aligns items along the main axis (horizontal if row, vertical if column) */
    justify-content: flex-start;
    /* Items align at the start */
    justify-content: flex-end;
    /* Items align at the end */
    justify-content: center;
    /* Items align at the center */
    justify-content: space-between;
    /* Items are evenly spaced with no space at edges */
    justify-content: space-around;
    /* Items have equal space around them */
    justify-content: space-evenly;
    /* Items have equal spacing, including edges */

    /* Align Items - Aligns items along the cross axis (opposite of flex direction) */
    align-items: flex-start;
    /* Items align at the start of the cross axis */
    align-items: flex-end;
    /* Items align at the end of the cross axis */
    align-items: center;
    /* Items align at the center of the cross axis */
    align-items: baseline;
    /* Items align based on their text baseline */
    align-items: stretch;
    /* Items stretch to fill the container (default) */

    /* Align Self - Overrides align-items for a specific flex item */
    align-self: flex-start;
    /* Aligns this item at the start */
    align-self: flex-end;
    /* Aligns this item at the end */
    align-self: center;
    /* Aligns this item at the center */
    align-self: baseline;
    /* Aligns this item based on text baseline */

    /* Flex Basis - Defines the initial size of a flex item */
    flex-basis: 100px;
    /* Item starts with a width/height of 100px */

    /* Flex Grow - Defines how much an item can grow compared to others */
    flex-grow: 1;
    /* Item grows to fill available space (default 0, means no growth) */

    /* Flex Shrink - Defines how much an item can shrink */
    flex-shrink: 1;
    /* Item shrinks when space is limited (default 1) */

    /* Min Width - Ensures items donâ€™t shrink below a certain size */
    min-width: 400px;
    /* Sets minimum width to 400px */

    /* Short-hand flex property: flex-grow, flex-shrink, flex-basis */
    flex: 1 1 100px;
    /* Grows, shrinks, and starts with 100px */
    flex: 1 100px;
    /* Grows and starts with 100px */
    flex: 1;
    /* Grows to fill available space */
    flex: 100px;
    /* Only sets flex-basis */
}