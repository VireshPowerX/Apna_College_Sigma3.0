/* Universal & Element Selector */
div {    
    /* div is a selector, and * is a universal selector */
    
    /* CSS cascading rules:
       - The last declared style takes priority.
       - Inline CSS has the highest specificity (1000 power).
       - ID selectors (#id) have 100 power.
       - Classes (.class) and pseudo-classes (:hover) have 10 power.
       - Elements (div, p) and pseudo-elements (::before) have 1 power. */
    
    /* !important overrides all styles with 10,000 power */
    color: indianred !important; 
    
    /* Inheritance:
       - If a div has color red and a <p> inside it has yellow,
         any <ul> or <li> inside <p> will still inherit red due to CSS inheritance.
       - However, <button> and <input> do not inherit styles by default. */
    
    background-color: oldlace;
    
    /* Color Properties */
    color: rgb(0, 0, 0);  /* RGB (Red, Green, Blue) range: 0-255 */
    color: #000000;       /* Hexadecimal (0-9, A-F) */
    color: #000;          /* Hex shorthand */
    color: rgba(0, 0, 0, 0.5); /* RGBA (Alpha = opacity) */
    color: hsl(0, 100%, 50%);  /* HSL (Hue, Saturation, Lightness) */
    color: hsla(0, 100%, 50%, 0.5); /* HSLA (Alpha) */

    /* Typography */
    text-align: center;  /* left | right | center | justify */
    font-weight: 100;  /* 100 (thin) to 900 (bold) */
    text-decoration: underline;  /* underline | overline | line-through | none */
    line-height: normal;  /* normal | 1.5 | 2em | 200% */
    letter-spacing: normal;  /* normal | 1px | 0.1em */
    font-size: large;  /* xx-small | x-small | small | medium | large | x-large | xx-large */
    font-family: Arial, sans-serif; /* Font families */
}

/* ID & Class Selectors */
#myid { /* ID selector */ color:#000;}
.myclass { /* Class selector */ color:#000;}
.myclass.myclass2 { /* Multiple class selector */ color:#000;}

/* CSS Selectors */
p > span { /* Child selector: selects direct child of <p> */ color:#000;}
p span { /* Descendant selector: selects any <span> inside <p> */ color:#000;}
p + span { /* Adjacent sibling: selects next <span> after <p> */ color:#000;}
p ~ span { /* General sibling: selects all <span> after <p> */ color:#000;}
input[type="text"] { /* Attribute selector */ color:#000;}

/* Pseudo-classes */
h1:hover { /* When mouse hovers over h1 */ color:#000;}
h1:nth-of-type(2) { /* Targets every 2nd <h1> */ color:#000;}
h1:active { /* When an <h1> is clicked */ color:#000;}
h1:checked { /* When a checkbox or radio is selected */ color:#000;}

/* Pseudo-elements */
h1::first-letter { /* First letter of h1 */ color:#000;}
h1::first-line { /* First line of h1 */ color:#000;}
h1::selection { /* Text selection styling */ color:#000;}

/* Box Model */
p {  
    height: 200px;
    width: 200px;
    margin: 10px;  /* Margin: top right bottom left */
    padding: 10px; /* Padding: top right bottom left */
    border: 1px solid black; /* Border: width, style, color */
    border-top: 5px dashed black; /* Border (top) */
    border-radius: 10px; /* Rounded corners */
}

/* Display Properties */
p {
    display: block;        /* Default block display */
    display: inline-block; /* Acts like inline but respects width/height */
    display: inline;       /* No width/height, in line with text */
    display: none;         /* Hides element */
}

/* Relative Sizing */
p {
    font-size: 1em; /* Relative to parent */
    font-size: 1rem; /* Relative to root element */
    width: 50%; /* Relative to parent element */
}

/* Opacity & Transitions */
p {
    opacity: 0.5; /* 0 = fully transparent, 1 = fully visible */
    transition: all 1s; /* Smooth transition on all properties */
    transition-duration: 1s; /* Effect duration */
    transition: margin 1s ease-in 1s, padding 1s ease-out 1s; /* Multiple transitions */
}

/* Transformations */
p {
    transform: rotate(45deg); /* Rotates element */
    transform: scale(1.5); /* Scales element */
    transform: translateX(50px); /* Moves element */
}

/* Shadows & Background */
p {
    box-shadow: 10px 10px 5px 0px #888888; /* Adds shadow */
    background-image: url('image.jpg'); /* Background image */
    background-size: contain; /* Cover | Contain | Auto */
}

/* Positioning */
p {
    position: relative; /* Default (relative to normal flow) */
    position: absolute; /* Positioned relative to nearest positioned ancestor */
    position: fixed; /* Stays in place while scrolling */
    position: sticky; /* Sticks when scrolling past */
}
